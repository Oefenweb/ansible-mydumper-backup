#!/usr/bin/env bash
#
# {{ ansible_managed }}
#
# set -x;
set -e;
set -o pipefail;
#
thisFile="$(readlink -f "${0}")";
thisFilePath="$(dirname "${thisFile}")";

{% for database in mydumper_backup_backup_databases %}
mkdir -p -m {{ mydumper_backup_backup_path_mode }} '{{ mydumper_backup_backup_path }}/{{ database.dest | default(database.src) }}';
{{ mydumper_backup_mydumper_path }}/mydumper \
{% if mydumper_backup_host is defined %}
  --host {{ mydumper_backup_host }} \
{% endif %}
{% if mydumper_backup_user is defined %}
  --user {{ mydumper_backup_user }} \
{% endif %}
{% if mydumper_backup_password is defined %}
  --password '{{ mydumper_backup_password }}' \
{% endif %}
  --database {{ database.src }} \
{% if mydumper_backup_backup_threads is defined %}
  --threads {{ mydumper_backup_backup_threads | int }} \
{% endif %}
{% if mydumper_backup_compress is defined and mydumper_backup_compress | bool == true %}
  --compress \
{% endif %}
{% if mydumper_backup_build_empty_files is defined and mydumper_backup_build_empty_files | bool == true %}
  --build-empty-files \
{% endif %}
  --outputdir '{{ mydumper_backup_backup_path }}/{{ database.dest | default(database.src) }}' \
{% if mydumper_backup_verbose is defined %}
  --verbose {{ mydumper_backup_verbose | int }} \
{% endif %}
;

{% endfor %}
